{
  "comments": [
    {
      "key": {
        "uuid": "6e504a61_1e6b3e02",
        "filename": "client/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-01-30T09:02:37Z",
      "side": 1,
      "message": "You can make a resource-only library and *not* link against the library with java code in it here?",
      "range": {
        "startLine": 4,
        "startChar": 16,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42d75536_391be450",
        "filename": "client/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1061009
      },
      "writtenOn": "2020-01-30T18:01:35Z",
      "side": 1,
      "message": "as far as I understood, linking both code and resources is the point of this setup - code \u0026 resources live in the mainline StkLib, and AndroidManifest.xml + icon are in the platform Stk stub",
      "parentUuid": "6e504a61_1e6b3e02",
      "range": {
        "startLine": 4,
        "startChar": 16,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40c158da_d98903b2",
        "filename": "client/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2020-01-31T02:58:45Z",
      "side": 1,
      "message": "toddke recommends:\n1) Generating a stub StkLib\n2) In the manifest, use resources and classes that belong to the client. The client classes should extend the library classes and the client resources should point to the library resources.\n\nSo as long as the manifest only references classes and resources in the client, then we can enforce at build time that the shared library resources and classes exist as expected.",
      "parentUuid": "42d75536_391be450",
      "range": {
        "startLine": 4,
        "startChar": 16,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a306f84_d950a0ba",
        "filename": "client/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1061009
      },
      "writtenOn": "2020-01-30T18:01:35Z",
      "side": 1,
      "message": "why is this linked into the stub? won\u0027t that just cause problems?",
      "range": {
        "startLine": 8,
        "startChar": 23,
        "endLine": 8,
        "endChar": 29
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0decc38_2717c76c",
        "filename": "client/AndroidManifest.xml",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1061009
      },
      "writtenOn": "2020-01-30T18:05:19Z",
      "side": 1,
      "message": "instead of referencing it here, it might be easier (and more future proof) to set the theme up in StkInputActivity\u0027s onCreate() with this.setTheme(R.style.NoActionBar)",
      "range": {
        "startLine": 88,
        "startChar": 34,
        "endLine": 88,
        "endChar": 45
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab795991_96f95a08",
        "filename": "client/res/values/styles.xml",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2020-01-30T09:03:32Z",
      "side": 1,
      "message": "Actually, what mechanisms do you have in place to track that these stk:style/Transparent resource APIs don\u0027t change in incompatible ways?",
      "range": {
        "startLine": 16,
        "startChar": 78,
        "endLine": 18,
        "endChar": 64
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9feeb937_ea8c4ec4",
        "filename": "client/res/values/styles.xml",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1339996
      },
      "writtenOn": "2020-01-31T02:58:45Z",
      "side": 1,
      "message": "First, the library resources must be public an assigned a resource id to be used by the client.\nSecond, Stk can generate api files that track the public R.java as we do for the framework sdk.\nThird, we currently do not have a mechanism to ensure that the attributes or values of items in the style change in backwards compatible ways, but we don\u0027t have that for the framework either. even past API freeze, any framework engineer can change the value of any framework resource with triggering API review. Solving that issue is a larger project that cannot be done for the current release.",
      "parentUuid": "ab795991_96f95a08",
      "range": {
        "startLine": 16,
        "startChar": 78,
        "endLine": 18,
        "endChar": 64
      },
      "revId": "b7c2fdb49ad09837bba23c76ff76580ac09892fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}